name: Build, test, and deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build_and_test:
    permissions:
      contents: read
    name: Build and test on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4
    - name: Install libGLU for Linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libglu1
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    - name: Install Python package
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install .
    - name: Lint package with flake8
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Test package with pytest
      run: pytest tests
  
  compile_papers:
    name: Compile papers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        paper_dir: 
          - wec_as_multiport
          - template
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v4
    - name: Install libGLU for Linux
      run: sudo apt-get install libglu1
    - name: Install LaTex
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive
        sudo apt install dvipng texlive-latex-extra texlive-fonts-recommended cm-super
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    - name: Install Python package
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Install Jupyter, etc.
      run: pip install jupyter nbconvert
    - name: Run Python scripts
      run: |
          pwd
          echo "cd to ${{ matrix.paper_dir }}"
          cd papers/${{ matrix.paper_dir }}
          pwd
          for script in *.py; do
            if [ -f "$script" ]; then
              echo "Running $script"
              python "$script"
            fi
          done
    - name: Run Python notebooks
      run: |
        pwd
        echo "cd to ${{ matrix.paper_dir }}"
        cd papers/${{ matrix.paper_dir }}
        pwd
        for notebook in *.ipynb; do
          if [ -f "$notebook" ]; then
            echo "Running $notebook"
            jupyter nbconvert --to notebook --execute "$notebook"
          fi
        done
    - name: Display directory listing
      run: ls -R
    - name: Compile LaTeX documents
      uses: xu-cheng/latex-action@v3
      with:
        work_in_root_file_dir: true
        working_directory: papers/${{ matrix.paper_dir }}
        root_file: ${{ matrix.paper_dir }}.tex
    - name: Upload PDF from LaTex
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.paper_dir }}
        path: papers/${{ matrix.paper_dir }}/${{ matrix.paper_dir }}.pdf
        compression-level: 0
        if-no-files-found: error
  
  deploy_papers:
    name: Deploy papers
    runs-on: ubuntu-latest
    needs: [compile_papers]
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: PDFs
        merge-multiple: true
    - name: Display file listing
      run: ls -R
    - name: Deploy on orphan branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{ github.workspace }}
        publish_branch: build
        force_orphan: true
